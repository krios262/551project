//Memory instrcution list

//NOOP
1111_0000_0000_0000
//SLL S0 0xEF
0110_000_0_1110_1111
//SLL S7 0x12
0110_111_0_0001_0010
//SLH S0 0x70
0111_000_0_0111_0000
//SLH S1 0xab
0111_001_0_1010_1011
//Put h0050 in S6 as starting destination for mem writes (line 84 of mem dumps)
//SLL S6 0x50
0110_110_0_0101_0000
//SLH S6 0x00
0111_110_0_0000_0000
//J 0000_0000_0111
1000_0000_0000_0111
//store next command at h0010
@000e
//SST S0 S6 000000
0011_000_110_000000
//SLL S6 0xa0
0110_110_0_1010_0000
//VLD V0 S6 000000
0100_000_110_000000
//SLH S7 0x70
0111_111_0_0111_0000
//SLL S3 0xf0
0110_011_0_1111_0000
//SLH S3 0x00
0111_011_0_0000_0000
//store vector 0 to destination 0xf0 (expect at line 244)
//VST V0 S3 000000
0101_000_011_000000
//SLL S0 0xff
0110_000_0_1111_1111

//vdot test
//SLL S0 0x00
0110_000_0_0000_0000
//SLH S0 0x0A
0111_000_0_0000_1010
//VLD V1 S0 000000
0100_001_000_000000
//VLD V0 S0 000000
0100_000_000_000000
//VDOT S4 V1 V0
0001_100_001_000_000
//SLH S5 0x00
0111_101_0_0000_0000
//SLL S5 0x52
0110_101_0_0101_0010
//SST S4 S5 000000
0011_100_101_000000

//smul test
//SLL S5 0x00
0110_101_0_0000_0000
//SLH S5 0xbc
0111_101_0_1011_1100
//SMUL V4 V0 S5
0010_100_000_101_000
//SLL S0 0x5a
0110_000_0_0101_1010
//SLH S0 0x00
0111_000_0_0000_0000
//VST V4 S0 000000 //store result to 0x005a
0101_100_000_000000

//SLL S0 0x00
0110_000_0_0000_0000
//SLH S0 0x0C
0111_000_0_0000_1100
//VLD V1 S0 000000
0100_001_000_000000 
//SLH S6 0x00
0111_110_0_0000_0000
//SLL S6 0xa0
0110_110_0_1010_0000
//VLD V0 S6 000000
0100_000_110_000000
//VADD V2 V1 V0
0000_010_001_000_000
//SLL S3 0x00
0110_011_0_0000_0000
//SLH S3 0x0A
0111_011_0_0000_1010
//VST V2 S3 000000
0101_010_011_000000

//Vector to load
@00a0
0100_1000_1001_0000
0101_0011_0011_1010
0001_0110_0110_0100
0011_1000_0000_0000
0000_1111_0000_0000
0011_1111_0000_0000
0011_1111_0000_0000
0011_1000_0000_0000
0111_1111_0000_0000
0011_1101_0000_0000
0111_1010_0000_0000
0111_1010_0000_0000
0000_0000_0000_0001
0000_0000_0000_0001
0000_0000_0000_0001
//extra element to know if load went too far
0000_0000_0000_0000

//vector for initial vdot test
@0a00
0_01111_0000000000
0_01111_0000000000
0_01111_0000000000
0_01111_0000000000
0_01111_0000000000
0_01111_0000000000
0_01111_0000000000
0_01111_0000000000
0_01111_0000000000
0_01111_0000000000
0_01111_0000000000
0_01111_0000000000
0_01111_0000000000
0_01111_0000000000
0_01111_0000000000
0_01111_0000000000

@0c00
0100_0001_0101_0101
0101_0011_0011_1010
1000_1111_0011_0000
1011_0100_0000_0000
1001_0111_1000_0000
1011_1101_0000_0000
0010_1011_1001_0001
0000_0001_1110_0101
0000_0001_1110_0101
0011_0101_1110_0101
0111_1010_1111_0010
0111_0110_1111_0010
0000_0000_0000_0001
0000_0000_0000_0001
0000_0000_0000_0001
//extra element to know if load went too far
0000_0000_0000_0000




@FFF0
//SLH S5 0x00
0111_101_0_0000_0000
//SLL S5 0x51
0110_101_0_0101_0001
//SST S7 S6 000000
0011_111_101_000000
//NOOP
1111_0000_0000_0000
//NOOP
1111_0000_0000_0000
